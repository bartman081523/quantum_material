
############################################################################
#
#   Plots.py
#   Generates comparison plots for the PhD thesis.
#   Generated by PythonMind 1.0
#
############################################################################

import matplotlib.pyplot as plt
import numpy as np

# --- Task Definition 1: Generate Plots from Thesis Data ---

# --- Core Logic & Algorithm: Extract data from Table 1 ---
platforms = ['TFLN\n(mono)', 'Si$_3$N$_4$+TFLN\n(hybrid)', 'Si$_3$N$_4$+BTO\n(hybrid)', 'Si$_3$N$_4$+AlN\n(hybrid)']
# Data for loss. We take the mean of the range for the plot.
loss_values = [np.mean([0.03, 0.2]), np.mean([0.1, 1]), np.mean([6, 40]), np.mean([1, 10])]
# Data for V*pi*L.
vpl_values = [np.mean([3, 9]), np.mean([5, 9]), np.mean([0.3, 1]), 10]

# --- Required Libraries & Setup: Matplotlib for visualization ---
plt.style.use('seaborn-v0_8-whitegrid') # Set a clean, academic style

# --- Code Implementation (Snippet 1): Create Loss Comparison Plot ---
fig1, ax1 = plt.subplots(figsize=(7, 6))
colors1 = ['#1f77b4', '#ff7f0e', '#d62728', '#9467bd']
bars1 = ax1.bar(platforms, loss_values, color=colors1)
ax1.set_yscale('log') # Logarithmic scale is crucial here!
ax1.set_title('Comparison of Optical Losses', fontsize=14)
ax1.set_ylabel('Loss (dB/cm)')
ax1.tick_params(axis='x', rotation=15, labelsize=10) # Slight rotation for better readability

# Add values above the bars
for bar in bars1:
    yval = bar.get_height()
    ax1.text(bar.get_x() + bar.get_width()/2.0, yval * 1.1, f'{yval:.2f}', ha='center', va='bottom')

plt.tight_layout()
# --- Deployment Considerations: Save plot for LaTeX ---
# We save as PDF for lossless vector graphics in the dissertation.
plt.savefig('plot_loss_comparison.pdf')
print("Plot 'plot_loss_comparison.pdf' has been saved.")

# --- Code Implementation (Snippet 2): Create V-pi-L Comparison Plot ---
fig2, ax2 = plt.subplots(figsize=(7, 6))
colors2 = ['#1f77b4', '#ff7f0e', '#2ca02c', '#9467bd']
bars2 = ax2.bar(platforms, vpl_values, color=colors2)
ax2.set_title('Comparison of Electro-Optic Efficiency', fontsize=14)
ax2.set_ylabel('V$_{pi}$L (VÂ·cm)  [lower is better]')
ax2.tick_params(axis='x', rotation=15, labelsize=10)

# Add values above the bars
for bar in bars2:
    yval = bar.get_height()
    ax2.text(bar.get_x() + bar.get_width()/2.0, yval + 0.2, f'{yval:.2f}', ha='center', va='bottom')

plt.tight_layout()
plt.savefig('plot_vpl_comparison.pdf')
print("Plot 'plot_vpl_comparison.pdf' has been saved.")
